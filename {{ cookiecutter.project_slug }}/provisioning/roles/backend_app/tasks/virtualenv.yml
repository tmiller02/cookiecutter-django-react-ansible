---
{% raw %}

- name: Install python packages and build dependencies
  become: true
  ansible.builtin.apt:
    name:
      - make
      - gcc
      - libpq-dev
      - python3.11-dev
      - python3.11-venv
      - python3.11
      - watchman
    state: present

- name: Set up virtualenv in new release path
  become: true
  become_user: "{{ backend_app_user }}"
  ansible.builtin.pip:
    virtualenv: "{{ backend_app_virtualenv_dir }}"
    virtualenv_command: /usr/bin/python3.11 -m venv
    name:
      - pip==23.3.1
      - pip-tools==7.3.0
      - setuptools==68.2.2
      - wheel==0.41.3

- name: Install requirements using pip-sync
  become: true
  become_user: "{{ backend_app_user }}"
  # workaround for https://github.com/pypa/pip/issues/9644
  ansible.builtin.command: "{{ backend_app_virtualenv_dir }}/bin/pip-sync --pip-args='--no-deps'"
  args:
    chdir: "{{ backend_app_deploy_helper.new_release_path }}"
  changed_when: true

- name: Add .venvrc file that can be used to activate the virtualenv
  become: true
  become_user: "{{ backend_app_user }}"
  ansible.builtin.template:
    src: venvrc.j2
    dest: "~/.venvrc"
    mode: "u=rw,g=,o="

- name: Update .bashrc file to source .venvrc file
  become: true
  become_user: "{{ backend_app_user }}"
  ansible.builtin.blockinfile:
    path: "~/.bashrc"
    block: |
      . ~/.venvrc
{% endraw -%}
