---
{% raw -%}
# Deploy the project using the 'deploy_helper' ansible module. This copies the backend_app
# code into a unique release folder, with the 'current' symlink pointing to the latest
# release.
#
# These tasks are used when running a full deployment of the backend application
# (i.e. when deploying to a production server).
#
# This deploy strategy can be helpful if you need to quickly roll back to a previous
# release (by just changing the 'current' symlink to point to a different folder and
# restarting the systemd service). However, bear in mind that this approach may not be
# sufficient depending on what has changed between releases. For example, you may need
# to also consider changes made to the database by migrations.
#
# See https://docs.ansible.com/ansible/latest/modules/deploy_helper_module.html#deploy-helper-module
# for more info.

- name: Install rsync
  ansible.builtin.apt:
    name: rsync
    state: present

- name: Initialize the deploy root and gather facts
  become: true
  become_user: "{{ backend_app_user }}"
  community.general.deploy_helper:
    path: "{{ backend_app_root }}"
    release: "{{ backend_app_release_version }}"
    state: present
    shared_path: ""
  register: backend_app_deploy_helper_output

- name: Set backend_app_deploy_helper fact
  ansible.builtin.set_fact:
    backend_app_deploy_helper: "{{ backend_app_deploy_helper_output['ansible_facts']['deploy_helper'] }}"

- name: Set backend_app_virtualenv_dir fact
  ansible.builtin.set_fact:
    backend_app_virtualenv_dir: "{{ backend_app_deploy_helper.new_release_path }}/venv"

- name: Synchronize backend_app to the new release folder
  become: true
  become_user: "{{ backend_app_user }}"
  ansible.posix.synchronize:
    src: "{{ playbook_dir }}/../backend_app/"
    dest: "{{ backend_app_deploy_helper.new_release_path }}"
    rsync_opts:
      - "--exclude=__pycache__"
      - "--exclude=settings.env"
      - "--exclude=venv/"
      - "--exclude=static_root/"
      - "--exclude=.git/"
      - "--exclude=.DS_Store"
      - "--chown={{ backend_app_user }}:{{ backend_app_group }}"

- name: Add an unfinished file to allow cleanup on successful finalize
  become: true
  become_user: "{{ backend_app_user }}"
  ansible.builtin.file:
    path: '{{ backend_app_deploy_helper.new_release_path }}/{{ backend_app_deploy_helper.unfinished_filename }}'
    state: touch
{% endraw -%}
