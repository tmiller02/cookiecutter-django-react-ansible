---
{% raw %}

backend_app_database_name: "{{ database_name }}"
backend_app_database_user: "{{ database_user }}"
backend_app_database_password: "{{ database_password }}"
backend_app_allowed_hosts:
  - "{{ backend_server_name }}"

ssl_common_name: "{{ backend_server_name }}"
ssl_private_key_name: "backend_app.pem"
ssl_certificate_name: "backend_app.crt"

nginx_vhosts:
  - listen: "80"
    server_name: "{{ backend_server_name }}"
    return: 301 https://$server_name$request_uri
    filename: "backend_ssl_redirect.conf"

  # catch-all configuration to validate the 'Host' HTTP header. A request which does
  # not match the specified 'server_name' will be returned a 404 response. See
  # https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/#allowed-hosts
  # for more.
  - listen: "443 ssl http2"
    server_name: "_"
    return: "404"
    filename: "01_backend_ssl_catchall.conf"
    extra_parameters: |
      ssl_certificate /etc/ssl/certs/{{ ssl_certificate_name }};
      ssl_certificate_key /etc/ssl/private/{{ ssl_private_key_name }};

  - listen: "443 ssl http2"
    server_name: "{{ backend_server_name }}"
    filename: "02_backend_app.conf"
    extra_parameters: |
      location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_pass http://127.0.0.1:8080;
      }

      location /static {
          alias {{ backend_app_root }}/current/static_root;
      }

      ssl_certificate /etc/ssl/certs/{{ ssl_certificate_name }};
      ssl_certificate_key /etc/ssl/private/{{ ssl_private_key_name }};

{% endraw %}
