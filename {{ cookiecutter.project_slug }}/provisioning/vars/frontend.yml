---
{% raw %}

nodejs_version: "24.x"
nodejs_install_npm_user: "root"

ssl_common_name: "{{ frontend_server_name }}"
ssl_private_key_name: "frontend_app.pem"
ssl_certificate_name: "frontend_app.crt"

nginx_vhosts:
  - listen: "80"
    server_name: "{{ frontend_server_name }}"
    return: 301 https://$server_name$request_uri
    filename: "frontend_ssl_redirect.conf"

  # catch-all configuration to validate the 'Host' HTTP header. A request which does
  # not match the specified 'server_name' will be returned a 404 response.
  - listen: "443 ssl http2"
    server_name: "_"
    return: "404"
    filename: "01_frontend_ssl_catchall.conf"
    extra_parameters: |
      ssl_certificate /etc/ssl/certs/{{ ssl_certificate_name }};
      ssl_certificate_key /etc/ssl/private/{{ ssl_private_key_name }};

  - listen: "443 ssl http2"
    server_name: "{{ frontend_server_name }}"
    filename: "02_frontend_app.conf"
    root: "{{ frontend_app_root }}/current/"
    index: "index.html"
    extra_parameters: |
      add_header Content-Security-Policy "default-src 'self';";
      add_header X-Frame-Options deny;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";

      location /static {
          # serve static files as normal
      }

      location / {
          # rely on the frontend app to handle all other urls if no matching file exists.
          try_files $uri /index.html;
      }

      ssl_certificate /etc/ssl/certs/{{ ssl_certificate_name }};
      ssl_certificate_key /etc/ssl/private/{{ ssl_private_key_name }};
{% endraw %}
