pipeline {

    // This Jenkinsfile requires the following additional Jenkins plugins:
    //   * AnsiColor

    agent any

    options {
        disableConcurrentBuilds()
    }

    environment {
        VAGRANT_FORCE_COLOR = "1"
    }

    stages {
        stage('Provision') {
            steps {

                echo 'Ensure vagrant plugins are installed'

                ansiColor('xterm') {
                    sh 'vagrant plugin install vagrant-vbguest vagrant-hostmanager'
                }

                echo 'Provisioning the Vagrant VMs...'

                ansiColor('xterm') {
                    sh 'vagrant up --provision'
                }
            }
        }

        stage('Run backend tests') {
            steps {
                echo 'Running unit tests...'
                sh './ssh_backend.sh make test'
            }
        }

        stage('Run frontend tests') {
            steps {
                echo 'Running unit tests...'
                sh 'vagrant ssh provisioner -c "cd /vagrant/frontend_app && CI=true npm test"'
            }
        }

        stage('Run backend checks') {
            steps {
                echo 'Checking for known vulnerabilities using "safety"...'
                sh './ssh_backend.sh make safety_check'
            }
        }

        stage('Run frontend checks') {
            steps {
                echo 'Checking for known vulnerabilities using "npm audit"...'
                sh 'vagrant ssh provisioner -c "cd /vagrant/frontend_app && npm audit"'
            }
        }

    }

    post {
        cleanup {
            echo 'Halting Vagrant VMs...'
            sh 'vagrant halt'
        }
    }

}