---
{% raw %}
- include_tasks: install_selenium_dependencies.yml

- include_tasks: users.yml

- name: ensure backend app root folder exists with correct ownership
  file:
    path: "{{ backend_app_root }}"
    state: directory
    owner: "{{ backend_app_user }}"
    group: "{{ backend_app_group }}"

- import_tasks: vagrant_mount.yml
  when: backend_app_vagrant_mount | bool

- import_tasks: run_deploy.yml
  when: not backend_app_vagrant_mount | bool

- import_tasks: virtualenv.yml

- name: template settings into the new release path
  template:
    src: settings.env.j2
    dest: "{{ backend_app_deploy_helper.new_release_path }}/settings.env"
    owner: "{{ backend_app_user }}"
    group: "{{ backend_app_group }}"
    mode: "u=rw,g=,o="

- import_tasks: collect_static.yml

- name: finalize the deploy, removing the unfinished file and switching the 'current' symlink
  become: true
  become_user: "{{ backend_app_user }}"
  deploy_helper:
    path: "{{ backend_app_root }}"
    release: '{{ backend_app_deploy_helper.new_release }}'
    state: finalize
    clean: true
    keep_releases: 10
  when: not backend_app_vagrant_mount | bool

- name: add .venvrc file that can be used to activate the virtualenv
  become: true
  become_user: "{{ backend_app_user }}"
  template:
    src: venvrc.j2
    dest: "~/.venvrc"

# Note - this uses the open vulnerability database which is updated on a monthly basis.
# To get access to vulnerabilities as soon as they are added, you will need a Safety
# API key. See https://pypi.org/project/safety/ for more.
#
# Note also that this doesn't fail the playbook if vulnerable packages are found. This
# only displays the report in the ansible output, so we don't cause any deployment to
# fail unexpectedly. There is a dedicated 'Run checks' step in the Jenkinsfile which
# *will* cause the Jenkins job to fail if a vulnerable package is detected.
- name: display a report of the python dependencies using 'safety'
  become: true
  become_user: "{{ backend_app_user }}"
  run_once: true
  command: make safety_check
  args:
    chdir: "{{ backend_app_deploy_helper.current_path }}"
  ignore_errors: true
  changed_when: false

- import_tasks: migrate_db.yml

- import_tasks: systemd.yml

- import_tasks: cron_jobs.yml
{% endraw %}
